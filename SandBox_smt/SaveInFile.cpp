#include <iostream>
#include <Windows.h> // Для SetConsoleOutputCP/CP1251 (опционально)
#include <fstream>
#include <ctime> // Для инициализации rand()
using namespace std;

int main()
{
   // Установка кодировки консоли для отображения русских символов (опционально)
   SetConsoleOutputCP(1251);
   SetConsoleCP(1251);

   // Инициализация генератора случайных чисел для получения разных значений при каждом запуске
   srand(static_cast<unsigned int>(time(0)));

   double sum = 0;
   int const n = 100;
   double nums[n];

   // Заполнение массива случайными числами от 0 до 99.0
   for (int i = 0; i < n; i++)
   {
      nums[i] = (rand() % 100); // Результат - int, но приводится к double
   }

   // --- Изменение 1: Открытие файла в ТЕКСТОВОМ режиме ---
   // Убираем флаг ios::binary
   ofstream out("test.txt"); // Можно указать другое имя файла, например, "test.txt"
   if (!out) {
      cout << "Файл открыть невозможно\n";
      return 1;
   }

   // --- Изменение 2: Запись чисел как ТЕКСТА ---
   // Вместо out.write используем operator<<
   for (int i = 0; i < n; i++)
   {
      out << nums[i]; // Записываем значение как текст
      if (i < n - 1) {
         out << " "; // Добавляем пробел между числами (не после последнего)
      }
   }
   // Можно добавить endl или \n в конце, если нужно
   out << "Оло оло ло ло"  << endl; // Переход на новую строку в файле (опционально)

   out.close(); // Закрываем файл после записи

   cout << "Числа записаны в файл 'test.txt' в текстовом виде.\n";

   // --- Чтение из ТЕКСТОВОГО файла ---
   // Открываем файл для чтения в ТЕКСТОВОМ режиме
   ifstream in("test.txt"); // Имя файла должно совпадать с именем записи
   if (!in) {
      cout << "Файл 'test.txt' открыть невозможно\n";
      return 1;
   }

   cout << "\nЧисла из файла и их сумма:\n";

   // Сбросим сумму, если хотим пересчитать из файла
   sum = 0;
   double temp_num;
   int count = 0; // Для отслеживания количества прочитанных чисел

   // Читаем числа из файла по одному
   while (in >> temp_num) // in >> temp_num возвращает false, когда достигает конца файла или встречает нечисловое значение
   {
      nums[count] = temp_num; // Сохраняем в массив (если нужно)
      cout << temp_num << ' '; // Выводим на экран
      sum += temp_num; // Суммируем
      count++;
   }

   cout << "\nsum = " << sum << endl;
   cout << "Прочитано чисел: " << count << endl;

   in.close(); // Закрываем файл после чтения

   return 0;
}